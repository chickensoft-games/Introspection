#pragma warning disable
#nullable enable
public partial class TypeRegistry : Chickensoft.Introspection.ITypeRegistry {
  public static Chickensoft.Introspection.ITypeRegistry Instance { get; } = new TypeRegistry();
  
  public System.Collections.Generic.IReadOnlyDictionary<System.Type, Chickensoft.Introspection.ITypeMetadata> VisibleTypes { get; } = new System.Collections.Generic.Dictionary<System.Type, Chickensoft.Introspection.ITypeMetadata>() {
      [typeof(AliasedStuff.Nested.Child)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("Child", static (r) => r.Receive<AliasedStuff.Nested.Child>(), static () => System.Activator.CreateInstance<AliasedStuff.Nested.Child>(), new AliasedStuff.Nested.Child.MetatypeMetadata(), 1), 
      [typeof(AliasedStuff.Nested.Child2)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("Child2", static (r) => r.Receive<AliasedStuff.Nested.Child2>(), static () => System.Activator.CreateInstance<AliasedStuff.Nested.Child2>(), new AliasedStuff.Nested.Child2.MetatypeMetadata(), 1), 
      [typeof(AliasedStuff.Nested.DirectChild)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("DirectChild", static (r) => r.Receive<AliasedStuff.Nested.DirectChild>(), static () => System.Activator.CreateInstance<AliasedStuff.Nested.DirectChild>(), new AliasedStuff.Nested.DirectChild.MetatypeMetadata(), 1), 
      [typeof(AliasedStuff.Nested.ExtendsTypeFromSomewhereElse)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ExtendsTypeFromSomewhereElse", static (r) => r.Receive<AliasedStuff.Nested.ExtendsTypeFromSomewhereElse>(), static () => System.Activator.CreateInstance<AliasedStuff.Nested.ExtendsTypeFromSomewhereElse>(), new AliasedStuff.Nested.ExtendsTypeFromSomewhereElse.MetatypeMetadata(), 1), 
      [typeof(AlternativeNamespace.ChildBaseFullyQualified)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildBaseFullyQualified", static (r) => r.Receive<AlternativeNamespace.ChildBaseFullyQualified>(), static () => System.Activator.CreateInstance<AlternativeNamespace.ChildBaseFullyQualified>(), new AlternativeNamespace.ChildBaseFullyQualified.MetatypeMetadata(), 1), 
      [typeof(AlternativeNamespace.ChildBaseNotFullyQualified)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildBaseNotFullyQualified", static (r) => r.Receive<AlternativeNamespace.ChildBaseNotFullyQualified>(), static () => System.Activator.CreateInstance<AlternativeNamespace.ChildBaseNotFullyQualified>(), new AlternativeNamespace.ChildBaseNotFullyQualified.MetatypeMetadata(), 1), 
      [typeof(BaseClasses.A.B.DeeplyNamespaced.Container)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Container", static (r) => r.Receive<BaseClasses.A.B.DeeplyNamespaced.Container>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.DeeplyNamespaced.Container>()), 
      [typeof(BaseClasses.A.B.DeeplyNamespaced.Container.Container2)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Container2", static (r) => r.Receive<BaseClasses.A.B.DeeplyNamespaced.Container.Container2>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.DeeplyNamespaced.Container.Container2>()), 
      [typeof(BaseClasses.A.B.DeeplyNamespaced.Container.Container2.DeeplyNestedBaseClass)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("DeeplyNestedBaseClass", static (r) => r.Receive<BaseClasses.A.B.DeeplyNamespaced.Container.Container2.DeeplyNestedBaseClass>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.DeeplyNamespaced.Container.Container2.DeeplyNestedBaseClass>(), new BaseClasses.A.B.DeeplyNamespaced.Container.Container2.DeeplyNestedBaseClass.MetatypeMetadata(), 1), 
      [typeof(BaseClasses.A.B.UsingDeeplyNamespaced.Child)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("Child", static (r) => r.Receive<BaseClasses.A.B.UsingDeeplyNamespaced.Child>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.UsingDeeplyNamespaced.Child>(), new BaseClasses.A.B.UsingDeeplyNamespaced.Child.MetatypeMetadata(), 1), 
      [typeof(BaseClasses.A.B.UsingDeeplyNamespaced.Group1)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Group1", static (r) => r.Receive<BaseClasses.A.B.UsingDeeplyNamespaced.Group1>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.UsingDeeplyNamespaced.Group1>()), 
      [typeof(BaseClasses.A.B.UsingDeeplyNamespaced.Group1.Group2)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Group2", static (r) => r.Receive<BaseClasses.A.B.UsingDeeplyNamespaced.Group1.Group2>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.UsingDeeplyNamespaced.Group1.Group2>()), 
      [typeof(BaseClasses.A.B.UsingDeeplyNamespaced.Group1.Group2.Child)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Child", static (r) => r.Receive<BaseClasses.A.B.UsingDeeplyNamespaced.Group1.Group2.Child>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.UsingDeeplyNamespaced.Group1.Group2.Child>()), 
      [typeof(BaseClasses.A.B.UsingDeeplyNamespaced.SomeChild)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("SomeChild", static (r) => r.Receive<BaseClasses.A.B.UsingDeeplyNamespaced.SomeChild>(), static () => System.Activator.CreateInstance<BaseClasses.A.B.UsingDeeplyNamespaced.SomeChild>(), new BaseClasses.A.B.UsingDeeplyNamespaced.SomeChild.MetatypeMetadata(), 1), 
      [typeof(BaseClasses.A.BaseClass)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("BaseClass", static (r) => r.Receive<BaseClasses.A.BaseClass>(), static () => System.Activator.CreateInstance<BaseClasses.A.BaseClass>(), new BaseClasses.A.BaseClass.MetatypeMetadata(), 1), 
      [typeof(BaseClasses.B.Child)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("Child", static (r) => r.Receive<BaseClasses.B.Child>(), static () => System.Activator.CreateInstance<BaseClasses.B.Child>(), new BaseClasses.B.Child.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.GeneratorTester.GeneratorOutput)] = new Chickensoft.Introspection.ConcreteTypeMetadata("GeneratorOutput", static (r) => r.Receive<Chickensoft.GeneratorTester.GeneratorOutput>(), static () => System.Activator.CreateInstance<Chickensoft.GeneratorTester.GeneratorOutput>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.BaseTypeTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("BaseTypeTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.BaseTypeTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.BaseTypeTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.IntrospectionGeneratorTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("IntrospectionGeneratorTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.IntrospectionGeneratorTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.IntrospectionGeneratorTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.DeclaredAttributeTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("DeclaredAttributeTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.DeclaredAttributeTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.DeclaredAttributeTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.DeclaredPropertyTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("DeclaredPropertyTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.DeclaredPropertyTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.DeclaredPropertyTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.DeclaredTypeRegistryTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("DeclaredTypeRegistryTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.DeclaredTypeRegistryTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.DeclaredTypeRegistryTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.DeclaredTypeTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("DeclaredTypeTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.DeclaredTypeTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.DeclaredTypeTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.ScopeTreeTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("ScopeTreeTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.ScopeTreeTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.ScopeTreeTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.TypeGeneratorTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("TypeGeneratorTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.TypeGeneratorTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.TypeGeneratorTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.TypeLocationTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("TypeLocationTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.TypeLocationTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.TypeLocationTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.TypeNodeTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("TypeNodeTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.TypeNodeTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.TypeNodeTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.TypeReferenceTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("TypeReferenceTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.TypeReferenceTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.TypeReferenceTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Models.UsingDirectiveTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("UsingDirectiveTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Models.UsingDirectiveTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Models.UsingDirectiveTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.NameOfIdTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("NameOfIdTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.NameOfIdTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.NameOfIdTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.NoIdTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("NoIdTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.NoIdTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.NoIdTest>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.AbstractType)] = new Chickensoft.Introspection.AbstractIntrospectiveTypeMetadata("AbstractType", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.AbstractType>(), new Chickensoft.Introspection.Generator.Tests.TestCases.AbstractType.MetatypeMetadata()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.AbstractTypeWithVersionIsBad)] = new Chickensoft.Introspection.AbstractIntrospectiveTypeMetadata("AbstractTypeWithVersionIsBad", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.AbstractTypeWithVersionIsBad>(), new Chickensoft.Introspection.Generator.Tests.TestCases.AbstractTypeWithVersionIsBad.MetatypeMetadata()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.AttributesWithNamedArgs)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("AttributesWithNamedArgs", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.AttributesWithNamedArgs>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.AttributesWithNamedArgs>(), new Chickensoft.Introspection.Generator.Tests.TestCases.AttributesWithNamedArgs.MetatypeMetadata(), "attributes_with_named_args", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.BaseModel)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("BaseModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.BaseModel>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.BaseModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.BaseModel.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.Collections)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("Collections", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.Collections>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.Collections>(), new Chickensoft.Introspection.Generator.Tests.TestCases.Collections.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildOne)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("ConcreteChildOne", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildOne>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildOne>(), new Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildOne.MetatypeMetadata(), "concrete_child_one", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildTwo)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("ConcreteChildTwo", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildTwo>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildTwo>(), new Chickensoft.Introspection.Generator.Tests.TestCases.ConcreteChildTwo.MetatypeMetadata(), "concrete_child_two", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.DerivedModel)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("DerivedModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.DerivedModel>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.DerivedModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.DerivedModel.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.GenericStruct<>)] = new Chickensoft.Introspection.TypeMetadata("GenericStruct<T>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.InitArgsModel)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("InitArgsModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.InitArgsModel>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.InitArgsModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.InitArgsModel.MetatypeMetadata(), "init_args_model", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.JunkAttribute)] = new Chickensoft.Introspection.ConcreteTypeMetadata("JunkAttribute", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.JunkAttribute>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.JunkAttribute>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.MyContainerClass)] = new Chickensoft.Introspection.ConcreteTypeMetadata("MyContainerClass", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.MyContainerClass>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.MyContainerClass>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.MyContainerClass.MyModel)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("MyModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.MyContainerClass.MyModel>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.MyContainerClass.MyModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.MyContainerClass.MyModel.MetatypeMetadata(), "my_model", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.MyType)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("MyType", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.MyType>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.MyType>(), new Chickensoft.Introspection.Generator.Tests.TestCases.MyType.MetatypeMetadata(), "my_type", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.MyType<>)] = new Chickensoft.Introspection.TypeMetadata("MyType<T>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.NameOfId)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("NameOfId", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.NameOfId>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.NameOfId>(), new Chickensoft.Introspection.Generator.Tests.TestCases.NameOfId.MetatypeMetadata(), "NameOfId", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.NoId)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("NoId", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.NoId>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.NoId>(), new Chickensoft.Introspection.Generator.Tests.TestCases.NoId.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.NullablePropertyTypes)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("NullablePropertyTypes", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.NullablePropertyTypes>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.NullablePropertyTypes>(), new Chickensoft.Introspection.Generator.Tests.TestCases.NullablePropertyTypes.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.One.Two)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Two", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.One.Two>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.One.Two>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.One.Two.IThree.Four)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Four", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.One.Two.IThree.Four>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.One.Two.IThree.Four>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.One.Two.IThree.Four.NestedType)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("NestedType", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.One.Two.IThree.Four.NestedType>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.One.Two.IThree.Four.NestedType>(), new Chickensoft.Introspection.Generator.Tests.TestCases.One.Two.IThree.Four.NestedType.MetatypeMetadata(), "nested_type", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.Outer)] = new Chickensoft.Introspection.ConcreteTypeMetadata("Outer", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.Outer>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.Outer>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.Outer.Inner<>)] = new Chickensoft.Introspection.TypeMetadata("Inner<T>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.Outer.Inner<>.NotVisibleFromGlobalScope)] = new Chickensoft.Introspection.TypeMetadata("NotVisibleFromGlobalScope"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("OuterContainer", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer>(), new Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer)] = new Chickensoft.Introspection.ConcreteTypeMetadata("MidContainer", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer)] = new Chickensoft.Introspection.ConcreteTypeMetadata("AInnerContainer", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.AOtherModel)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("AOtherModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.AOtherModel>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.AOtherModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.AOtherModel.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.ZMyModel)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ZMyModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.ZMyModel>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.ZMyModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.AInnerContainer.ZMyModel.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.ZOtherContainer)] = new Chickensoft.Introspection.ConcreteTypeMetadata("ZOtherContainer", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.ZOtherContainer>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.OuterContainer.MidContainer.ZOtherContainer>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.PartialModel)] = new Chickensoft.Introspection.IdentifiableTypeMetadata("PartialModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.PartialModel>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.PartialModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.PartialModel.MetatypeMetadata(), "multiple_partial_definitions", 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.PropertyModel)] = new Chickensoft.Introspection.AbstractIntrospectiveTypeMetadata("PropertyModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.PropertyModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.PropertyModel.MetatypeMetadata()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.SetOnlyProperty)] = new Chickensoft.Introspection.AbstractIntrospectiveTypeMetadata("SetOnlyProperty", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.SetOnlyProperty>(), new Chickensoft.Introspection.Generator.Tests.TestCases.SetOnlyProperty.MetatypeMetadata()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.SomeType)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("SomeType", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.SomeType>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.SomeType>(), new Chickensoft.Introspection.Generator.Tests.TestCases.SomeType.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.StaticPropertyIsSkipped)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("StaticPropertyIsSkipped", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.StaticPropertyIsSkipped>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.StaticPropertyIsSkipped>(), new Chickensoft.Introspection.Generator.Tests.TestCases.StaticPropertyIsSkipped.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A)] = new Chickensoft.Introspection.ConcreteTypeMetadata("A", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AA)] = new Chickensoft.Introspection.ConcreteTypeMetadata("AA", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AA>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AA>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AA.AAA)] = new Chickensoft.Introspection.ConcreteTypeMetadata("AAA", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AA.AAA>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AA.AAA>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AB)] = new Chickensoft.Introspection.ConcreteTypeMetadata("AB", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AB>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AB>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AC)] = new Chickensoft.Introspection.ConcreteTypeMetadata("AC", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AC>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A.AC>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.A<>)] = new Chickensoft.Introspection.TypeMetadata("A<TA>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.B)] = new Chickensoft.Introspection.ConcreteTypeMetadata("B", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.B>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.B>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GA<>)] = new Chickensoft.Introspection.TypeMetadata("GA<TA>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GB<,>)] = new Chickensoft.Introspection.TypeMetadata("GB<TA, TB>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>)] = new Chickensoft.Introspection.TypeMetadata("GC<TA, TB, TC>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>.GCA)] = new Chickensoft.Introspection.TypeMetadata("GCA"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>.GCB)] = new Chickensoft.Introspection.TypeMetadata("GCB"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>.GCC)] = new Chickensoft.Introspection.TypeMetadata("GCC"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>.GCG<>)] = new Chickensoft.Introspection.TypeMetadata("GCG<TD>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>.GCH<,>)] = new Chickensoft.Introspection.TypeMetadata("GCH<TE, TF>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>.GCI<,,,>)] = new Chickensoft.Introspection.TypeMetadata("GCI<TG, TH, TI, TJ>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.TraditionalNamespace.GC<,,>.GCI<,,>)] = new Chickensoft.Introspection.TypeMetadata("GCI<TG, TH, TI>"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel)] = new Chickensoft.Introspection.AbstractIdentifiableTypeMetadata("VersionedModel", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel>(), new Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel.MetatypeMetadata(), "versioned_model"), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel0)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("VersionedModel0", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel0>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel0>(), new Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel0.MetatypeMetadata(), 0), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel1)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("VersionedModel1", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel1>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel1>(), new Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel1.MetatypeMetadata(), 1), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel2)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("VersionedModel2", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel2>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel2>(), new Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel2.MetatypeMetadata(), 2), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel3)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("VersionedModel3", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel3>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel3>(), new Chickensoft.Introspection.Generator.Tests.TestCases.VersionedModel3.MetatypeMetadata(), 3), 
      [typeof(Chickensoft.Introspection.Generator.Tests.TestUtils.TagAttribute)] = new Chickensoft.Introspection.ConcreteTypeMetadata("TagAttribute", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.TestUtils.TagAttribute>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.TestUtils.TagAttribute>()), 
      [typeof(Chickensoft.Introspection.Generator.Tests.Utils.CodeTest)] = new Chickensoft.Introspection.ConcreteTypeMetadata("CodeTest", static (r) => r.Receive<Chickensoft.Introspection.Generator.Tests.Utils.CodeTest>(), static () => System.Activator.CreateInstance<Chickensoft.Introspection.Generator.Tests.Utils.CodeTest>()), 
      [typeof(GlobalScopeContainer)] = new Chickensoft.Introspection.ConcreteTypeMetadata("GlobalScopeContainer", static (r) => r.Receive<GlobalScopeContainer>(), static () => System.Activator.CreateInstance<GlobalScopeContainer>()), 
      [typeof(GlobalScopeContainer.TypeInGlobalScope)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("TypeInGlobalScope", static (r) => r.Receive<GlobalScopeContainer.TypeInGlobalScope>(), static () => System.Activator.CreateInstance<GlobalScopeContainer.TypeInGlobalScope>(), new GlobalScopeContainer.TypeInGlobalScope.MetatypeMetadata(), 1), 
      [typeof(One.B)] = new Chickensoft.Introspection.ConcreteTypeMetadata("B", static (r) => r.Receive<One.B>(), static () => System.Activator.CreateInstance<One.B>()), 
      [typeof(One.Two.A)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("A", static (r) => r.Receive<One.Two.A>(), static () => System.Activator.CreateInstance<One.Two.A>(), new One.Two.A.MetatypeMetadata(), 1), 
      [typeof(OtherNamespace.Altogether.A)] = new Chickensoft.Introspection.ConcreteTypeMetadata("A", static (r) => r.Receive<OtherNamespace.Altogether.A>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A>()), 
      [typeof(OtherNamespace.Altogether.A.B)] = new Chickensoft.Introspection.ConcreteTypeMetadata("B", static (r) => r.Receive<OtherNamespace.Altogether.A.B>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A.B>()), 
      [typeof(OtherNamespace.Altogether.A.B.C)] = new Chickensoft.Introspection.ConcreteTypeMetadata("C", static (r) => r.Receive<OtherNamespace.Altogether.A.B.C>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A.B.C>()), 
      [typeof(OtherNamespace.Altogether.A.B.C.ChildBaseFullyQualified)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildBaseFullyQualified", static (r) => r.Receive<OtherNamespace.Altogether.A.B.C.ChildBaseFullyQualified>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A.B.C.ChildBaseFullyQualified>(), new OtherNamespace.Altogether.A.B.C.ChildBaseFullyQualified.MetatypeMetadata(), 1), 
      [typeof(OtherNamespace.Altogether.A.B.C.D)] = new Chickensoft.Introspection.ConcreteTypeMetadata("D", static (r) => r.Receive<OtherNamespace.Altogether.A.B.C.D>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A.B.C.D>()), 
      [typeof(OtherNamespace.Altogether.A.B.C.D.SomeBaseClass)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("SomeBaseClass", static (r) => r.Receive<OtherNamespace.Altogether.A.B.C.D.SomeBaseClass>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A.B.C.D.SomeBaseClass>(), new OtherNamespace.Altogether.A.B.C.D.SomeBaseClass.MetatypeMetadata(), 1), 
      [typeof(OtherNamespace.Altogether.A.B.ChildBaseFullyQualified)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildBaseFullyQualified", static (r) => r.Receive<OtherNamespace.Altogether.A.B.ChildBaseFullyQualified>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A.B.ChildBaseFullyQualified>(), new OtherNamespace.Altogether.A.B.ChildBaseFullyQualified.MetatypeMetadata(), 1), 
      [typeof(OtherNamespace.Altogether.A.ChildBaseFullyQualified)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildBaseFullyQualified", static (r) => r.Receive<OtherNamespace.Altogether.A.ChildBaseFullyQualified>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.A.ChildBaseFullyQualified>(), new OtherNamespace.Altogether.A.ChildBaseFullyQualified.MetatypeMetadata(), 1), 
      [typeof(OtherNamespace.Altogether.ChildBaseFullyQualified)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildBaseFullyQualified", static (r) => r.Receive<OtherNamespace.Altogether.ChildBaseFullyQualified>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.ChildBaseFullyQualified>(), new OtherNamespace.Altogether.ChildBaseFullyQualified.MetatypeMetadata(), 1), 
      [typeof(OtherNamespace.Altogether.ChildBaseFullyQualified2)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildBaseFullyQualified2", static (r) => r.Receive<OtherNamespace.Altogether.ChildBaseFullyQualified2>(), static () => System.Activator.CreateInstance<OtherNamespace.Altogether.ChildBaseFullyQualified2>(), new OtherNamespace.Altogether.ChildBaseFullyQualified2.MetatypeMetadata(), 1), 
      [typeof(StaticUsings.ChildWithStaticBaseRef)] = new Chickensoft.Introspection.IntrospectiveTypeMetadata("ChildWithStaticBaseRef", static (r) => r.Receive<StaticUsings.ChildWithStaticBaseRef>(), static () => System.Activator.CreateInstance<StaticUsings.ChildWithStaticBaseRef>(), new StaticUsings.ChildWithStaticBaseRef.MetatypeMetadata(), 1)
  };
  
  [System.Runtime.CompilerServices.ModuleInitializer]
  internal static void Initialize() => Chickensoft.Introspection.Types.Graph.Register(TypeRegistry.Instance);
}

#nullable restore
#pragma warning restore
